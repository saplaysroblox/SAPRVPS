user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# RTMP configuration
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        # Live streaming application
        application live {
            live on;
            record off;
            
            # Allow publishing from localhost only for security
            allow publish 127.0.0.1;
            deny publish all;
            
            # Allow all to play
            allow play all;
            
            # HLS configuration
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3;
            hls_playlist_length 60;
            hls_sync 100ms;
            hls_continuous on;
            
            # DASH configuration
            dash on;
            dash_path /tmp/dash;
            dash_fragment 3;
            dash_playlist_length 60;
            
            # Notify when stream starts/stops
            on_publish http://localhost:5000/api/rtmp/publish;
            on_play http://localhost:5000/api/rtmp/play;
            on_publish_done http://localhost:5000/api/rtmp/publish_done;
            on_play_done http://localhost:5000/api/rtmp/play_done;
        }
        
        # Recording application
        application record {
            live on;
            record all;
            record_path /var/recordings;
            record_unique on;
            record_suffix .flv;
            record_max_size 1000M;
            
            # Notify when recording is done
            on_record_done http://localhost:5000/api/rtmp/record_done;
        }
    }
}

# HTTP configuration
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;
    
    server {
        listen 80;
        server_name localhost;
        
        # Serve static files
        location / {
            root /var/www/html;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }
        
        # HLS streaming endpoint
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
        
        # DASH streaming endpoint
        location /dash {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
        
        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Access-Control-Allow-Origin *;
        }
        
        # Statistics stylesheet
        location /stat.xsl {
            root /var/www/html;
        }
        
        # Proxy to Node.js app
        location /api {
            proxy_pass http://localhost:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}